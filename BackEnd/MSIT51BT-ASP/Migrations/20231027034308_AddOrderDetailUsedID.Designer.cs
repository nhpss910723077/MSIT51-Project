// <auto-generated />
using System;
using MSIT51BT_ASP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSIT51BT_ASP.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20231027034308_AddOrderDetailUsedID")]
    partial class AddOrderDetailUsedID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MSIT51BT_ASP.Models.Banner", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Img1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Img2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Link")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Bookcase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("ProductID");

                    b.ToTable("Bookcase");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsedID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UsedID");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Config", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DataName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DataValue")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Config");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9590),
                            DataCategory = "Enable",
                            DataName = "停用",
                            DataValue = 0,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9590)
                        },
                        new
                        {
                            ID = 2,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9592),
                            DataCategory = "Enable",
                            DataName = "啟用",
                            DataValue = 1,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9592)
                        },
                        new
                        {
                            ID = 3,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9593),
                            DataCategory = "OrderStatus",
                            DataName = "訂單成立",
                            DataValue = 0,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9593)
                        },
                        new
                        {
                            ID = 4,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9594),
                            DataCategory = "OrderStatus",
                            DataName = "訂單待收貨",
                            DataValue = 1,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9594)
                        },
                        new
                        {
                            ID = 5,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9595),
                            DataCategory = "OrderStatus",
                            DataName = "訂單完成",
                            DataValue = 2,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9595)
                        },
                        new
                        {
                            ID = 6,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9596),
                            DataCategory = "OrderStatus",
                            DataName = "訂單取消",
                            DataValue = 3,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9596)
                        },
                        new
                        {
                            ID = 7,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9597),
                            DataCategory = "OrderStatus",
                            DataName = "訂單退貨",
                            DataValue = 4,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9597)
                        },
                        new
                        {
                            ID = 8,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9598),
                            DataCategory = "BookStatus",
                            DataName = "全新",
                            DataValue = 0,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9598)
                        },
                        new
                        {
                            ID = 9,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9599),
                            DataCategory = "BookStatus",
                            DataName = "良好",
                            DataValue = 1,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9599)
                        },
                        new
                        {
                            ID = 10,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9600),
                            DataCategory = "BookStatus",
                            DataName = "有註記",
                            DataValue = 2,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9600)
                        },
                        new
                        {
                            ID = 11,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9601),
                            DataCategory = "BookVerifyStatus",
                            DataName = "審核中",
                            DataValue = 0,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9601)
                        },
                        new
                        {
                            ID = 12,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9602),
                            DataCategory = "BookVerifyStatus",
                            DataName = "銷售中",
                            DataValue = 1,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9602)
                        },
                        new
                        {
                            ID = 13,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9603),
                            DataCategory = "BookVerifyStatus",
                            DataName = "已售出",
                            DataValue = 2,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9603)
                        },
                        new
                        {
                            ID = 14,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9604),
                            DataCategory = "BookVerifyStatus",
                            DataName = "已下架",
                            DataValue = 3,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9603)
                        },
                        new
                        {
                            ID = 15,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9605),
                            DataCategory = "Gender",
                            DataName = "男性",
                            DataValue = 0,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9604)
                        },
                        new
                        {
                            ID = 16,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9606),
                            DataCategory = "Gender",
                            DataName = "女性",
                            DataValue = 1,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9605)
                        },
                        new
                        {
                            ID = 17,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9607),
                            DataCategory = "Gender",
                            DataName = "不提供",
                            DataValue = 2,
                            Enable = true,
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9606)
                        });
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Favorite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("ProductID");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.LineBind", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("LineBind");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Manager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("County")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("FbMemberNumber")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("GoogleMemberNumber")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LineBindCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LineMemberNumber")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NickName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PublicBookcase")
                        .HasColumnType("bit");

                    b.Property<int>("ShoppingMoney")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifyCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("VerifyStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.HasIndex("FbMemberNumber")
                        .IsUnique()
                        .HasFilter("[FbMemberNumber] IS NOT NULL");

                    b.HasIndex("GoogleMemberNumber")
                        .IsUnique()
                        .HasFilter("[GoogleMemberNumber] IS NOT NULL");

                    b.HasIndex("LineMemberNumber")
                        .IsUnique()
                        .HasFilter("[LineMemberNumber] IS NOT NULL");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.MemberMessage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.ToTable("MemberMessage");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Img1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NewsCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("NewsCategoryID");

                    b.ToTable("News");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.NewsCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("NewsCategory");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9497),
                            Enable = true,
                            Name = "優惠活動",
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9491)
                        },
                        new
                        {
                            ID = 2,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9498),
                            Enable = true,
                            Name = "最新公告",
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9498)
                        });
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderCancel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("OrderFormID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("OrderFormID");

                    b.ToTable("OrderCancel");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrderFormID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SalePrice")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UsedID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderFormID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UsedID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderForm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ATMAccount")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ATMBankCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CVSID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CVSStoreAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CVSStoreName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("ReceiveAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceiveCounty")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReceiveDistrict")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReceiveEmail")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ReceiveName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceivePhone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ReceiveZipcode")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingCVSPaymentNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShippingFee")
                        .HasColumnType("int");

                    b.Property<string>("ShippingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ShippingType")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubTotal")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("OrderForm");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderReturn", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("OrderFormID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("OrderFormID");

                    b.ToTable("OrderReturn");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EcpayName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9567),
                            Enable = true,
                            Name = "銀行轉帳",
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9566)
                        },
                        new
                        {
                            ID = 2,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9568),
                            Enable = true,
                            Name = "貨到付款",
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9568)
                        },
                        new
                        {
                            ID = 3,
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9569),
                            EcpayName = "XXXXXXX",
                            Enable = true,
                            Name = "信用卡",
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9569)
                        });
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AuthorContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("ISBN10")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ISBN13")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Img1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ListPrice")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SalePrice")
                        .HasColumnType("int");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Translator")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ISBN10")
                        .IsUnique()
                        .HasFilter("[ISBN10] IS NOT NULL");

                    b.HasIndex("ISBN13")
                        .IsUnique()
                        .HasFilter("[ISBN13] IS NOT NULL");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.ProductCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.SearchKeyword", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SearchTime")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("SearchKeyword");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Shipping", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AllowPayment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EcpayName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("Fee")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Shipping");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AllowPayment = "[1, 2, 3]",
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9578),
                            EcpayName = "DDDDDDDDD",
                            Enable = true,
                            Fee = 60,
                            Name = "超商取貨",
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9578)
                        },
                        new
                        {
                            ID = 2,
                            AllowPayment = "[1, 3]",
                            CreateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9580),
                            Enable = true,
                            Fee = 100,
                            Name = "宅配",
                            Sort = 0,
                            UpdateTime = new DateTime(2023, 10, 27, 11, 43, 7, 952, DateTimeKind.Local).AddTicks(9580)
                        });
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.ShoppingMoneyRecord", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.ToTable("ShoppingMoneyRecord");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.UsedSale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BookStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Img1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Img2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Img3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Img4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Img5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("RemitAccount")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SalePrice")
                        .HasColumnType("int");

                    b.Property<bool>("Sold")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VerifyDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VerifyStatus")
                        .HasColumnType("int");

                    b.Property<string>("WithdrawType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("ProductID");

                    b.ToTable("UsedSale");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.UsedSeek", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("SeekPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("ProductID");

                    b.ToTable("UsedSeek");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Bookcase", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Cart", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.UsedSale", "UsedSale")
                        .WithMany()
                        .HasForeignKey("UsedID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Member");

                    b.Navigation("Product");

                    b.Navigation("UsedSale");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Favorite", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.MemberMessage", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.News", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.NewsCategory", "NewsCategory")
                        .WithMany()
                        .HasForeignKey("NewsCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NewsCategory");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderCancel", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.OrderForm", "OrderForm")
                        .WithMany()
                        .HasForeignKey("OrderFormID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderForm");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderDetail", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.OrderForm", "OrderForm")
                        .WithMany()
                        .HasForeignKey("OrderFormID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.UsedSale", "UsedSale")
                        .WithMany()
                        .HasForeignKey("UsedID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OrderForm");

                    b.Navigation("Product");

                    b.Navigation("UsedSale");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderForm", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.OrderReturn", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.OrderForm", "OrderForm")
                        .WithMany()
                        .HasForeignKey("OrderFormID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderForm");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.Product", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.ShoppingMoneyRecord", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.UsedSale", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MSIT51BT_ASP.Models.UsedSeek", b =>
                {
                    b.HasOne("MSIT51BT_ASP.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MSIT51BT_ASP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
